## Building up yml file for build

kind: pipeline
type: docker
name: Pull Request Checker

#steps:
#- name: Get Web Build Tools
#  image: mcr.microsoft.com/dotnet/core/sdk
#  commands:
#  - export PATH="$PATH:/root/.dotnet/tools"
#  - dotnet tool install -g Microsoft.VisualStudio.Workload.WebBuildTools

steps:
- name: Clean Project
  image: mcr.microsoft.com/dotnet/sdk:latest
  commands:
  - mkdir -p /usr/share/dotnet/sdk/5.0.202/Microsoft/VisualStudio/v16.0/WebApplications
  - cp buildtools/Microsoft.WebApplication.targets /usr/share/dotnet/sdk/5.0.202/Microsoft/VisualStudio/v16.0/WebApplications
  - dotnet clean LEAD/Scheduler/Scheduler.csproj

- name: Build Project
  image: mcr.microsoft.com/dotnet/sdk:latest
  commands:
  - mkdir -p /usr/share/dotnet/sdk/5.0.202/Microsoft/VisualStudio/v16.0/WebApplications
  - cp buildtools/Microsoft.WebApplication.targets /usr/share/dotnet/sdk/5.0.202/Microsoft/VisualStudio/v16.0/WebApplications
  - ls -l /usr/share/dotnet/sdk/5.0.202
  #- dotnet build LEAD/Scheduler/Scheduler.csproj
  RUN powershell " `
    $ErrorActionPreference = 'Stop'; `
    $ProgressPreference = 'SilentlyContinue'; `
    @('4.0', '4.5.2', '4.6.2', '4.7.2', '4.8') `
    | %{ `
        Invoke-WebRequest `
            -UseBasicParsing `
            -Uri https://dotnetbinaries.blob.core.windows.net/referenceassemblies/v${_}.zip `
            -OutFile referenceassemblies.zip; `
        Expand-Archive referenceassemblies.zip -DestinationPath \"${Env:ProgramFiles(x86)}\Reference Assemblies\Microsoft\Framework\.NETFramework\"; `
        Remove-Item -Force referenceassemblies.zip; `
    }"


trigger:
  branch:
      - gitlearning
  event:
    include:
      - pull_request
      - push
